{"version":3,"sources":["components/Hero.js","components/Navbar.js","components/About.js","components/Quotes.js","components/Media.js","components/Contact.js","components/Footer.js","components/Wide.js","Mixpanel.js","App.js","serviceWorker.js","index.js"],"names":["Hero","React","Component","componentDidMount","window","addEventListener","this","lightenOnScroll","distY","pageYOffset","document","documentElement","scrollTop","hero","getElementsByClassName","classList","add","remove","render","createElement","id","class","alt","src","props","className","credit","navList","map","navItem","href","concat","Navbar","resizeOnScroll","navbar","nav","title","style","opacity","shrinkY","About","target","rel","Quotes","Media","data","media","clips","clip","type","tag","heading","subheading","allow","frameBorder","allowfullscreen","frameborder","allowtransparency","Contact","action","method","name","placeholder","value","Footer","Wide","mixpanel","init","Mixpanel","identify","alias","track","people","set","App","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b22762e0.chunk.js","sourcesContent":["import React from 'react';\n\nclass Hero extends React.Component {\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.lightenOnScroll);\n    }\n    lightenOnScroll() {\n        const distY = window.pageYOffset || document.documentElement.scrollTop;\n        const shrinkY = 200;\n        const hero = document.getElementsByClassName(\"Hero\")[0];\n        if (distY > shrinkY) {\n            hero.classList.add(\"Hero-top\");\n        }\n        else {\n            hero.classList.remove(\"Hero-top\");\n        }\n    }\n    render() {\n        return (\n            <div id=\"home\" class=\"Hero\">\n                <img alt=\"\" src={this.props.src}></img>\n                <div className=\"photo-credit\">\n                    {this.props.credit}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Hero;","import React from 'react';\n\nconst navItems = [\"home\", \"about\", \"media\", \"contact\"];\nconst navList = navItems.map((navItem)=> \n    <li><a href={`#${navItem}`}>{navItem}</a></li>\n);\n\nclass Navbar extends React.Component {\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.resizeOnScroll);\n    }\n    resizeOnScroll() {\n        const distY = window.pageYOffset || document.documentElement.scrollTop;\n        const shrinkY = 380;\n        const navbar = document.getElementsByClassName(\"Navbar\")[0];\n        const nav = document.getElementsByClassName(\"Nav\")[0];\n        const title = document.getElementsByClassName(\"Title\")[0];\n        if (distY > shrinkY) {\n            navbar.classList.add(\"Navbar-top\");\n            nav.classList.add(\"Nav-top\");\n            title.classList.add(\"Title-top\");\n            navbar.style.opacity = 1;\n        }\n        else if (distY > shrinkY - 300) {\n            navbar.style.opacity = 0.5;\n        }\n        else {\n            navbar.style.opacity = 1;\n            navbar.classList.remove(\"Navbar-top\");\n            nav.classList.remove(\"Nav-top\");\n            title.classList.remove(\"Title-top\");           \n        }\n    }\n    render() {\n        return (\n            <div class=\"Navbar\">\n            <h1 class=\"Title\">\n                Rishi Mirchandani\n            </h1>\n            <div className='Nav'>\n                <ul id='nav'>\n                    {navList}\n                </ul>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;","import React from 'react';\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div className=\"Section About\">\n                <h2>About</h2>\n                <img alt=\"\" src=\"/front.png\"></img>\n\n                <p> After amassing six gold medals in major national and international competitions, Indian-American pianist Rishi Mirchandani <a href=\"#ravel\">debuted</a> as soloist with the Grammy award-winning Pittsburgh Symphony Orchestra at the age of 18. He made his first of four appearances at Carnegie Hall in New York at age 12, and he has performed to critical acclaim in England, Germany, Italy, Portugal, Spain, and the United States.</p>\n            \n                <p>Mirchandani holds a bachelor’s degree in mathematics, <i>summa cum laude</i>, from Yale University. He earned Distinction in Mathematics and was one of twelve students (top 1%) in his year admitted to the Phi Beta Kappa honour society as a third-year student. While pursuing his mathematics studies, he also studied piano with Elizabeth Parisot and founded the <a href=\"http://yalepiano.org/\"  target=\"_blank\" rel=\"noopener noreferrer\">Yale Undergraduate Piano Collective</a>. At commencement, he received the Stanton Wheeler and Marcia Chambers Award for outstanding artistic contributions to campus life.</p>\n            \n                <p>Mirchandani subsequently moved to New York to focus on music professionally. He completed his master's degree in piano at the Manhattan School of Music with Jeffrey Cohen and Solomon Mikowsky, sponsored as a winner of the President’s Award. He then earned a Professional Studies Diploma at the Mannes School of Music, where he studied with Thomas Sauer and won the coveted Steinway Award for artistic excellence and service to Mannes. Mirchandani quickly became a New York audience favourite as a soloist, chamber musician, and song pianist, receiving invitations to appear at Carnegie Hall, the Bohemian National Hall, the German Consulate of the U.N., the Union Club, Klavierhaus, and many other renowned venues in the city.</p>\n            \n                <img alt=\"\" src=\"/middle.png\"></img>\n                        \n                <p>Now based in London, Mirchandani recently completed his Artist Diploma at the Royal College of Music. He was a student of Dmitri Alexeev, Ian Jones, and Andrew Zolinsky. He received sponsorship from the institution as an RCM Scholar.</p>\n            \n                <p>He has received additional guidance from <a href=\"#langlang\">Lang Lang</a>, Richard Goode, Boris Berman, Robert McDonald, and Eldar Nebolsin. Mirchandani's recording of Nancy Galbraith's Three Preludes for Piano was featured on the acclaimed Centaur Records album <i>Strange Travels</i>, which garnered a spot on the \"Want List\" in <i>Fanfare Magazine</i>.</p>\n            \n                <p>A native of Pittsburgh, Mirchandani studied as a child with Luz Manr&#237;quez. Now a committed teacher himself, Mirchandani will join the teaching staff of the U.K.'s renowned Charterhouse School in September 2025 and also maintains a successful private studio. His students routinely receive top honours in exams and competitions, including invitations to perform in Carnegie Hall. He previously taught undergraduate piano proficiency at the Mannes School of Music and served as a Teaching Artist for <a href=\"https://www.midoriandfriends.org/\">Midori & Friends</a>. In 2024, he gave a masterclass as a guest artist at the Carnegie Mellon University Preparatory School of Music. He believes earnestly in music’s ability to help human beings discover their inner power, natural grace, and shared humanity.</p>\n\n\n            </div>\n        )\n    }\n}\n\nexport default About;\n","import React from 'react';\n\nclass Quotes extends React.Component {\n    render() {\n        return (\n            <div className=\"Section Quotes\">\n                <i className=\"Anchor\" id=\"about\"></i>\n                <p className=\"quote\">\"Such superlative conviction. True insight.\"</p>\n                <p className=\"quoted\">—Ian Fountain</p>\n                <p className=\"quote\">\"A captivating gem. Electric and masterful.\"</p>\n                <p className=\"quoted\">—Nancy Galbraith</p>\n            </div>\n        )\n    }\n}\n\nexport default Quotes;\n","import React from 'react';\nimport data from '../data.json'\n\nclass Media extends React.Component {\n    render() {\n        return (\n            <div className=\"Section Media\">\n                <h2 id=\"media\">Media</h2>\n                <div class=\"container\">\n                {data.media.clips.map( (clip) => {\n                    if (clip.type === \"youtube\") {\n                        return (\n                            <div>\n                                <i class=\"Anchor\" id={clip.tag}></i>\n                                <h3>{clip.heading}</h3>\n                                <p>{clip.subheading}</p>\n                                <iframe class=\"Video\" title={clip.id} src={`https://www.youtube.com/embed/${clip.id}?modestbranding=1&rel=0`} allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" frameBorder=\"0\" allowfullscreen></iframe>\n                            </div>\n                        );\n                    }\n                    else if (clip.type === \"spotify\") {\n                        return (\n                            <div>\n                                <i class=\"Anchor\" id={clip.tag}></i>\n                                <h3>{clip.heading}</h3>\n                                <p>{clip.subheading}</p>\n                                <iframe class=\"Spotify\" title={clip.id} src={`https://open.spotify.com/embed/${clip.id}`} frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                            </div>\n                        )\n                    }\n                    else {\n                        return (\n                            <div>\n                                <i class=\"Anchor\" id={clip.tag}></i>\n                                <h3>{clip.heading}</h3>\n                                <p>{clip.subheading}</p>\n                                <iframe class=\"MP3\" title={clip.id} src={clip.id} frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                            </div>\n                        )\n                    }\n                })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Media;","import React from 'react';\n\nclass Contact extends React.Component {\n    render() {\n        return (\n            <div className=\"Section Contact\">\n                <h2 id=\"contact\">Contact</h2>\n                <p>For booking or private lesson inquiries, please email <a href=\"mailto:hello@rishimirchandani.com\">hello@rishimirchandani.com</a> or use the form below.</p>\n                <form action=\"\" method=\"POST\">\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" />\n                    <input type=\"text\" name=\"Email\" placeholder=\"Email\" />\n                    <textarea name=\"message\" placeholder=\"Message\"></textarea>\n                    <input type=\"submit\" id=\"submit\" value=\"Send message\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Contact;","import React from 'react';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div class=\"Section Footer\">\n                <p>Copyright &#169;2025 Rishi Mirchandani </p>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React from 'react';\n\nclass Wide extends React.Component {\n    render() {\n        return (\n            <div class=\"Wide\">\n                <img alt=\"\" src={this.props.src}></img>\n            </div>\n        );\n    }\n}\n\nexport default Wide;","import mixpanel from 'mixpanel-browser';\nmixpanel.init('40fc1ac0917e193dc1780da06e975415')\n\nlet env_check = process.env.NODE_ENV === 'production';\n\nlet actions = {\n  identify: (id) => {\n    if (env_check) mixpanel.identify(id);\n  },\n  alias: (id) => {\n    if (env_check) mixpanel.alias(id);\n  },\n  track: (name, props) => {\n    if (env_check) mixpanel.track(name, props);\n  },\n  people: {\n    set: (props) => {\n      if (env_check) mixpanel.people.set(props);\n    },\n  },\n};\n\nexport let Mixpanel = actions;\n","import React from 'react';\nimport Hero from './components/Hero'\nimport Navbar from './components/Navbar'\nimport About from './components/About'\nimport Quotes from './components/Quotes'\nimport Media from './components/Media'\nimport Contact from './components/Contact'\nimport Footer from './components/Footer'\nimport Wide from './components/Wide'\nimport { Mixpanel } from './Mixpanel'\nimport './App.css';\n\nfunction App() {\n  Mixpanel.track('home');\n  return (\n      <div className=\"App\">\n          <Navbar />\n          <Hero src=\"/hero.png\" credit=\"Photo: Titilayo Ayangade\" />\n          <Quotes />\n          <About />\n          <Media />\n          <Wide src=\"/pan.png\"/>\n          <Contact />\n          <Footer />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}