{"version":3,"sources":["components/Hero.js","components/Navbar.js","components/About.js","components/Media.js","components/Contact.js","components/Footer.js","components/Wide.js","App.js","serviceWorker.js","index.js"],"names":["Hero","window","addEventListener","this","lightenOnScroll","distY","pageYOffset","document","documentElement","scrollTop","hero","getElementsByClassName","classList","add","remove","id","class","src","props","React","Component","navList","map","navItem","href","Navbar","resizeOnScroll","navbar","nav","title","className","About","data","about","bio","split","i","key","Media","media","clips","clip","type","heading","subheading","allow","frameBorder","allowfullscreen","frameborder","allowtransparency","Contact","method","action","name","placeholder","value","Footer","Wide","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d330ffc2.chunk.js","sourcesContent":["import React from 'react';\n\nclass Hero extends React.Component {\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.lightenOnScroll);\n    }\n    lightenOnScroll() {\n        const distY = window.pageYOffset || document.documentElement.scrollTop;\n        const shrinkY = 200;\n        const hero = document.getElementsByClassName(\"Hero\")[0];\n        if (distY > shrinkY) {\n            hero.classList.add(\"Hero-top\");\n        }\n        else {\n            hero.classList.remove(\"Hero-top\");\n        }\n    }\n    render() {\n        return (\n            <div id=\"home\" class=\"Hero\">\n                <img src={this.props.src}></img>\n            </div>\n        );\n    }\n}\n\nexport default Hero;","import React from 'react';\n\nconst navItems = [\"home\", \"about\", \"media\", \"contact\"];\nconst navList = navItems.map((navItem)=> \n    <li><a href={`#${navItem}`}>{navItem}</a></li>\n);\n\nclass Navbar extends React.Component {\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.resizeOnScroll);\n    }\n    resizeOnScroll() {\n        const distY = window.pageYOffset || document.documentElement.scrollTop;\n        const shrinkY = 400;\n        const navbar = document.getElementsByClassName(\"Navbar\")[0];\n        const nav = document.getElementsByClassName(\"Nav\")[0];\n        const title = document.getElementsByClassName(\"Title\")[0];\n        if (distY > shrinkY) {\n            navbar.classList.add(\"Navbar-top\");\n            nav.classList.add(\"Nav-top\");\n            title.classList.add(\"Title-top\");\n        }\n        else {\n            navbar.classList.remove(\"Navbar-top\");\n            nav.classList.remove(\"Nav-top\");\n            title.classList.remove(\"Title-top\");           \n        }\n    }\n    render() {\n        return (\n            <div class=\"Navbar\">\n            <h1 class=\"Title\">\n                Rishi Mirchandani\n            </h1>\n            <div className='Nav'>\n                <ul id='nav'>\n                    {navList}\n                </ul>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport data from '../data/data.json'\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div className=\"Section About\">\n                <h2 id=\"about\">About</h2>\n                <img src=\"/front.png\"></img>\n                {data.about.bio.split(\"\\n\").map((i, key) => {\n                    return <p key={key}>{i}</p>;\n                })}\n            </div>\n        )\n    }\n}\n\nexport default About;","import React from 'react';\nimport data from '../data/data.json'\n\nclass Media extends React.Component {\n    render() {\n        return (\n            <div className=\"Section Media\">\n                <h2 id=\"media\">Media</h2>\n                <div class=\"container\">\n                {data.media.clips.map( (clip) => {\n                    if (clip.type === \"youtube\") {\n                        return (\n                            <div>\n                                <h3>{clip.heading}</h3>\n                                <p>{clip.subheading}</p>\n                                <iframe class=\"Video\" src={`https://www.youtube.com/embed/${clip.id}?modestbranding=1&rel=0`} allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" frameBorder=\"0\" allowfullscreen></iframe>\n                            </div>\n                        );\n                    }\n                    else if (clip.type === \"spotify-playlist\") {\n                        return (\n                            <div>\n                                <h3>{clip.heading}</h3>\n                                <p>{clip.subheading}</p>\n                                <iframe class=\"Spotify\" src={`https://open.spotify.com/embed/playlist/${clip.id}`} frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                            </div>\n                        )\n                    }\n                    else if (clip.type === \"mp3\") {\n                        return (\n                            <div>\n                                <h3>{clip.heading}</h3>\n                                <p>{clip.subheading}</p>\n                                <iframe class=\"MP3\" src={clip.id} frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                            </div>\n                        )\n                    }\n})}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Media;","import React from 'react';\n\nclass Contact extends React.Component {\n    render() {\n        return (\n            <div className=\"Section Contact\">\n                <h2 id=\"contact\">Contact</h2>\n                <p>Please email <a href=\"mailto:contact@rishimirchandani.com\">contact@rishimirchandani.com</a>, or use the form below.</p>\n                <form method=\"post\" action=\"\" method=\"POST\">\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" />\n                    <input type=\"text\" name=\"Email\" placeholder=\"Email\" />\n                    <textarea name=\"message\" placeholder=\"Message\"></textarea>\n                    <input type=\"submit\" id=\"submit\" value=\"Send message\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Contact;","import React from 'react';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div class=\"Section Footer\">\n                <p>Copyright &#169; 2020 Rishi Mirchandani </p>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React from 'react';\n\nclass Wide extends React.Component {\n    render() {\n        return (\n            <div class=\"Wide\">\n                <img src={this.props.src}></img>\n            </div>\n        );\n    }\n}\n\nexport default Wide;","import React from 'react';\nimport Hero from './components/Hero'\nimport Navbar from './components/Navbar'\nimport About from './components/About'\nimport Media from './components/Media'\nimport Contact from './components/Contact'\nimport Footer from './components/Footer'\nimport Wide from './components/Wide'\nimport './App.css';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <Navbar />\n          <Hero src=\"/hero.png\"/>\n          <About />\n          <Media />\n          <Wide src=\"/pan.png\"/>\n          <Contact />\n          <Footer />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}