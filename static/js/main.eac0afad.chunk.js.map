{"version":3,"sources":["components/Hero.js","components/Navbar.js","components/About.js","components/Quotes.js","components/Media.js","components/Contact.js","components/Footer.js","components/Wide.js","Mixpanel.js","App.js","serviceWorker.js","index.js"],"names":["Hero","window","addEventListener","this","lightenOnScroll","distY","pageYOffset","document","documentElement","scrollTop","hero","getElementsByClassName","classList","add","remove","id","class","alt","src","props","React","Component","navList","map","navItem","href","Navbar","resizeOnScroll","navbar","nav","title","style","opacity","shrinkY","className","About","target","rel","Quotes","Media","data","media","clips","clip","type","tag","heading","subheading","allow","frameBorder","allowfullscreen","frameborder","allowtransparency","Contact","action","method","name","placeholder","value","Footer","Wide","mixpanel","init","Mixpanel","identify","alias","track","people","set","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eac0afad.chunk.js","sourcesContent":["import React from 'react';\n\nclass Hero extends React.Component {\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.lightenOnScroll);\n    }\n    lightenOnScroll() {\n        const distY = window.pageYOffset || document.documentElement.scrollTop;\n        const shrinkY = 200;\n        const hero = document.getElementsByClassName(\"Hero\")[0];\n        if (distY > shrinkY) {\n            hero.classList.add(\"Hero-top\");\n        }\n        else {\n            hero.classList.remove(\"Hero-top\");\n        }\n    }\n    render() {\n        return (\n            <div id=\"home\" class=\"Hero\">\n                <img alt=\"\" src={this.props.src}></img>\n            </div>\n        );\n    }\n}\n\nexport default Hero;","import React from 'react';\n\nconst navItems = [\"home\", \"about\", \"media\", \"contact\"];\nconst navList = navItems.map((navItem)=> \n    <li><a href={`#${navItem}`}>{navItem}</a></li>\n);\n\nclass Navbar extends React.Component {\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.resizeOnScroll);\n    }\n    resizeOnScroll() {\n        const distY = window.pageYOffset || document.documentElement.scrollTop;\n        const shrinkY = 380;\n        const navbar = document.getElementsByClassName(\"Navbar\")[0];\n        const nav = document.getElementsByClassName(\"Nav\")[0];\n        const title = document.getElementsByClassName(\"Title\")[0];\n        if (distY > shrinkY) {\n            navbar.classList.add(\"Navbar-top\");\n            nav.classList.add(\"Nav-top\");\n            title.classList.add(\"Title-top\");\n            navbar.style.opacity = 1;\n        }\n        else if (distY > shrinkY - 300) {\n            navbar.style.opacity = 0.5;\n        }\n        else {\n            navbar.style.opacity = 1;\n            navbar.classList.remove(\"Navbar-top\");\n            nav.classList.remove(\"Nav-top\");\n            title.classList.remove(\"Title-top\");           \n        }\n    }\n    render() {\n        return (\n            <div class=\"Navbar\">\n            <h1 class=\"Title\">\n                Rishi Mirchandani\n            </h1>\n            <div className='Nav'>\n                <ul id='nav'>\n                    {navList}\n                </ul>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport data from '../data.json'\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div className=\"Section About\">\n                <h2>About</h2>\n                <img alt=\"\" src=\"/front.png\"></img>\n\n                <p> Rishi Mirchandani is an Indian-American pianist based in New York City. At 18, he <a href=\"#ravel\">debuted</a> with the Pittsburgh Symphony Orchestra after amassing six first-prize awards in major national and international competitions for young artists.</p>\n            \n                <p> Mirchandani made his first of three appearances at Carnegie Hall in New York at the age of 12. He has also performed at Heinz Hall in Pittsburgh, the Aronoff Center in Cincinnati, Centro Cultural de Belém in Portugal, and Real Collegio di Lucca in Italy, among others.</p>\n\n                <p> He has participated in masterclasses with a number of illustrious pianists, among them Richard Goode, Boris Berman, <a href=\"#langlang\">Lang Lang</a>, Eldar Nebolsin, Wei-Yi Yang, and Ian Jones. Mirchandani's <a href=\"#preludes\">2014 recording</a> of Nancy Galbraith's Three Preludes for Piano was featured on the acclaimed Centaur Records album <i>Strange Travels</i>, which garnered a spot on the \"Want List\" in <i>Fanfare Magazine</i>.</p>\n                \n                <p> Mirchandani is a native of Pittsburgh, where he studied with Luz Manríquez. In 2019, he graduated <i>summa cum laude</i> from Yale University with a bachelor's degree in mathematics. He earned Distinction in Mathematics and was one of twelve students from his class (top 1%) elected to Phi Beta Kappa as a junior. While pursuing his mathematics studies, he also studied piano with Elizabeth Parisot and founded the <a href=\"http://yalepiano.org/\"  target=\"_blank\" rel=\"noopener noreferrer\">Yale Undergraduate Piano Collective</a>. At commencement, he received the Stanton Wheeler and Marcia Chambers Award for outstanding artistic contributions to campus life. </p>\n                \n                <p> Mirchandani is now pursuing a master's degree at the Manhattan School of Music as a winner of the President's Award scholarship. He is a former pupil of Solomon Mikowsky and currently studies with Jeffrey Cohen.</p>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React from 'react';\nimport data from '../data.json'\n\nclass Quotes extends React.Component {\n    render() {\n        return (\n            <div className=\"Section Quotes\">\n                <a className=\"Anchor\" id=\"about\"></a>\n                <p className=\"quote\">\"A bold, individual musical voice.\"</p>\n                <p className=\"quoted\">—Marc Silverman</p>\n                <p className=\"quote\">\"A captivating gem. Electric and masterful.\"</p>\n                <p className=\"quoted\">—Nancy Galbraith</p>\n            </div>\n        )\n    }\n}\n\nexport default Quotes;","import React from 'react';\nimport data from '../data.json'\n\nclass Media extends React.Component {\n    render() {\n        return (\n            <div className=\"Section Media\">\n                <h2 id=\"media\">Media</h2>\n                <div class=\"container\">\n                {data.media.clips.map( (clip) => {\n                    if (clip.type === \"youtube\") {\n                        return (\n                            <div>\n                                <a class=\"Anchor\" id={clip.tag}></a>\n                                <h3>{clip.heading}</h3>\n                                <p>{clip.subheading}</p>\n                                <iframe class=\"Video\" title={clip.id} src={`https://www.youtube.com/embed/${clip.id}?modestbranding=1&rel=0`} allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" frameBorder=\"0\" allowfullscreen></iframe>\n                            </div>\n                        );\n                    }\n                    else if (clip.type === \"spotify-playlist\") {\n                        return (\n                            <div>\n                                <a class=\"Anchor\" id={clip.tag}></a>\n                                <h3>{clip.heading}</h3>\n                                <p>{clip.subheading}</p>\n                                <iframe class=\"Spotify\" title={clip.id} src={`https://open.spotify.com/embed/playlist/${clip.id}`} frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                            </div>\n                        )\n                    }\n                    else {\n                        return (\n                            <div>\n                                <a class=\"Anchor\" id={clip.tag}></a>\n                                <h3>{clip.heading}</h3>\n                                <p>{clip.subheading}</p>\n                                <iframe class=\"MP3\" title={clip.id} src={clip.id} frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                            </div>\n                        )\n                    }\n                })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Media;","import React from 'react';\n\nclass Contact extends React.Component {\n    render() {\n        return (\n            <div className=\"Section Contact\">\n                <h2 id=\"contact\">Contact</h2>\n                <p>For booking or private lesson inquiries, please email <a href=\"mailto:contact@rishimirchandani.com\">contact@rishimirchandani.com</a> or use the form below.</p>\n                <form action=\"\" method=\"POST\">\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" />\n                    <input type=\"text\" name=\"Email\" placeholder=\"Email\" />\n                    <textarea name=\"message\" placeholder=\"Message\"></textarea>\n                    <input type=\"submit\" id=\"submit\" value=\"Send message\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Contact;","import React from 'react';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div class=\"Section Footer\">\n                <p>Copyright &#169; 2021 Rishi Mirchandani </p>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React from 'react';\n\nclass Wide extends React.Component {\n    render() {\n        return (\n            <div class=\"Wide\">\n                <img alt=\"\" src={this.props.src}></img>\n            </div>\n        );\n    }\n}\n\nexport default Wide;","import mixpanel from 'mixpanel-browser';\nmixpanel.init('40fc1ac0917e193dc1780da06e975415')\n\nlet env_check = process.env.NODE_ENV === 'production';\n\nlet actions = {\n  identify: (id) => {\n    if (env_check) mixpanel.identify(id);\n  },\n  alias: (id) => {\n    if (env_check) mixpanel.alias(id);\n  },\n  track: (name, props) => {\n    if (env_check) mixpanel.track(name, props);\n  },\n  people: {\n    set: (props) => {\n      if (env_check) mixpanel.people.set(props);\n    },\n  },\n};\n\nexport let Mixpanel = actions;\n","import React from 'react';\nimport Hero from './components/Hero'\nimport Navbar from './components/Navbar'\nimport About from './components/About'\nimport Quotes from './components/Quotes'\nimport Media from './components/Media'\nimport Contact from './components/Contact'\nimport Footer from './components/Footer'\nimport Wide from './components/Wide'\nimport { Mixpanel } from './Mixpanel'\nimport './App.css';\n\nfunction App() {\n  Mixpanel.track('home');\n  return (\n      <div className=\"App\">\n          <Navbar />\n          <Hero src=\"/hero.png\"/>\n          <Quotes />\n          <About />\n          <Media />\n          <Wide src=\"/pan.png\"/>\n          <Contact />\n          <Footer />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}